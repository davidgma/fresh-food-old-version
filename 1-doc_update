#!/bin/bash

echo Clearing the dist directory
rm -rf dist
mkdir -p dist/icons


function resequence {
    i=10

    echo Resequencing files...
    pattern='(^'$1'[01234567890 ]*)(.*)'

    # count number of files
    fc=0
    #for f in $1*.md;
    for f in $1*;
    do
        let "fc=fc+1"
    done
    echo Number of files: $fc
    # calculate the number of digits needed
    let "fc=fc*10"
    calc="echo (l($fc)/l(10)) + 1"
    digitscount=$($calc | bc -l)
    calc="echo scale=0;$digitscount/1"
    digitscount=$($calc | bc -l)
    echo Digits needed in filename: $digitscount

    #for f in $1*.md;
    for f in $1*;
    do
    if [[ "$f" =~ $pattern ]]
    then
        calc="printf %0${digitscount}d $i"
        iformatted=$($calc)
        mv "$f" "$1$iformatted ${BASH_REMATCH[2]}" 2>/dev/null
        let "i=i+10"
    fi
    done
}

cd doc
resequence M
resequence S

################################
# For single page
################################
echo Clearing the tmp directory
cd ..
rm -rf tmp
mkdir -p tmp
cd tmp
cp ../doc/S*.md .
cp ../doc/pandocepub.css .
cp ../doc/pandochtml.css .


stub1a="pandoc --from gfm --standalone --toc --highlight-style pygments"
stub1b=" --metadata-file=../doc/pandoc-meta.yaml --include-in-header=../doc/header-includes.txt "
stub1c="-c pandoc"
stub1=${stub1a}${stub1b}${stub1c}
stub2=".css S*.md --output "

function convert {
    echo Converting to $2...
    rm -f $1.$2
    ${stub1}$2${stub2}$1.$2
    echo Copying to dist directory
    cp $1.$2 ../dist/$1.$2
    cp pandoc$2.css ../dist
}
convert single_tmp html
convert freshfood epub 

# Replace the title
sed -f ../doc/replace_title_script.sed ../dist/single_tmp.html > ../dist/single.html
rm ../dist/single_tmp.html


################################
# For multiple pages
################################


function append {
    fileToAppend=$(find . -name "*$1")
    #echo arg1: $1
    echo fileToAppend: $fileToAppend
    pandoc "$fileToAppend" -f gfm -t html -o tmp.html
    cat tmp.html >> "$outputFile"
}

function start {
    fileToStart=$(find . -name "*$1") 
    cp "$fileToStart" "$outputFile"  
}

function finish {
    fileToEnd=$(find . -name "*$1")
    cat "$fileToEnd" >> "$outputFile"
}

function fix_orphans {
    search="#"$1
    replace=$2".html#"$1
    #echo $search
    #echo $replace
    sed -i "s/$search/$replace/" $outputFile
}

cd ../doc
cp dashboard.css ../dist/

# Main page
outputFile="../dist/index.html"
start header.html
append introduction.md
append disclaimer.md 
append main_rules.md
append fresh_rules.md
finish footer.html

# Fix the orphaned links
fix_orphans three_day practice
fix_orphans micronutrients practice
fix_orphans compulsive practice
fix_orphans microbiome practice
fix_orphans exercise practice
fix_orphans sun practice
fix_orphans tinned practice
fix_orphans packaging practice
fix_orphans ingredients practice
fix_orphans frozen practice
fix_orphans ripened practice
fix_orphans preparation practice
fix_orphans shelf_life practice
fix_orphans fermented practice
fix_orphans smoked practice
fix_orphans practice practice
fix_orphans theory theory

# Theory
outputFile="../dist/theory.html"
start header.html
append theory.md
append biogenic_amines.md 
append histamine_intolerance.md
append the_human_study.md
append the_pig_study.md
append neuro.md
append broken_mechanism.md
append occams_razor.md
append hunger.md
append memory.md
append cats.md
finish footer.html

# Practice
outputFile="../dist/practice.html"
start header.html
append practice.md
append micronutrients.md
append gut.md 
append compulsive.md
append microbiome.md
append exercise.md
append sun.md
append tinned.md
append packaging.md
append ingredients.md
append frozen.md
append ripened.md
append preparation.md
append shelf_life.md
append fermented.md
append smoked.md
append meat_and_fish.md
append tomatoes.md
append rice.md
append fruit_juice.md
append alcohol.md
append nuts.md
append chocolate.md
append always_ok.md
append three_day.md
append very_safe.md
finish footer.html

# Fix the links
fix_orphans fresh_rules index

# Credit
outputFile="../dist/credits.html"
start header.html
append end_credit.md
finish footer.html


# Copy in the icons
cp ../doc/icons/* ../dist/icons
cp ../favicon.png ../dist/favicon.ico

echo Setting up the local busybox server
cd ..
pkill -f "busybox httpd -p 4202 -h ./dist"
busybox httpd -p 4202 -h ./dist
echo Site served at http://localhost:4202

